{"version":3,"sources":["components/gameCard.js","components/gameGrid.js","App.js","index.js"],"names":["GameCard","props","game","rootProps","GameTitle","GameDescription","GameImage","bg","borderWidth","borderColor","borderRadius","px","base","md","py","spacing","useBreakpointValue","position","src","alt","draggable","fallback","p","mx","fontWeight","color","useColorModeValue","fontSize","GameGrid","columns","React","count","toArray","children","filter","length","Math","min","lg","xl","columnGap","rowGap","App","useState","gamesList","setGamesList","isLoaded","setIsLoaded","searchText","setSearchText","groupFilterParams","setGroupFilterParams","levelFilterParams","setLevelFilterParams","searchParams","useEffect","axios","get","then","response","data","maxW","w","boxSize","direction","justify","as","steps","loop","Infinity","wrapper","href","isExternal","FaExternalLinkSquareAlt","pointerEvents","BsSearch","variant","placeholder","onChange","e","target","value","icon","BsCaretDownFill","Group","Level","some","newGame","toString","toLowerCase","indexOf","search","map","left","right","zIndex","thickness","speed","emptyColor","size","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0650b2ba.chunk.js","sourcesContent":["import {\n  AspectRatio,\n  Box,\n  Image,\n  Skeleton,\n  Stack,\n  Text,\n  useBreakpointValue,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport * as React from \"react\";\n\nexport const GameCard = (props) => {\n  const { game, rootProps } = props;\n  const { GameTitle, GameDescription, GameImage } = game;\n  return (\n    <Stack\n      bg=\"green.100\"\n      borderWidth=\"5px\"\n      borderColor=\"red.900\"\n      borderRadius=\"base\"\n      px={{ base: \"4\", md: \"6\" }}\n      py={{ base: \"4\", md: \"6\" }}\n      spacing={useBreakpointValue({ base: \"4\", md: \"5\" })}\n      {...rootProps}\n    >\n      <Box position=\"relative\">\n        <AspectRatio>\n          <Image\n            src={GameImage}\n            alt={GameTitle}\n            draggable=\"false\"\n            fallback={<Skeleton />}\n            borderRadius={useBreakpointValue({\n              base: \"md\",\n              md: \"xl\",\n            })}\n          />\n        </AspectRatio>\n      </Box>\n      <Stack>\n        <Stack spacing=\"1\">\n          <Text\n            bg=\"green.900\"\n            p=\"10px\"\n            mx=\"auto\"\n            borderRadius=\"2xl\"\n            fontWeight=\"bold\"\n            color=\"white\"\n          >\n            Title\n          </Text>\n          <Text color={useColorModeValue(\"gray.700\", \"gray.400\")}>\n            {GameTitle}\n          </Text>\n        </Stack>\n        <Stack spacing=\"1\">\n          <Text\n            fontWeight=\"bold\"\n            bg=\"red.900\"\n            p=\"5px\"\n            mx=\"auto\"\n            borderRadius=\"2xl\"\n            color=\"white\"\n            fontSize=\"sm\"\n          >\n            Game Description\n          </Text>\n          <Text\n            fontWeight=\"medium\"\n            color={useColorModeValue(\"gray.700\", \"gray.100\")}\n          >\n            {GameDescription}\n          </Text>\n        </Stack>\n      </Stack>\n    </Stack>\n  );\n};\n","import * as React from \"react\";\nimport { SimpleGrid } from \"@chakra-ui/react\";\n\nexport const GameGrid = (props) => {\n  const columns = React.useMemo(() => {\n    const count = React.Children.toArray(props.children).filter(\n      React.isValidElement\n    ).length;\n    return {\n      base: Math.min(2, count),\n      md: Math.min(3, count),\n      lg: Math.min(4, count),\n      xl: Math.min(5, count),\n    };\n  }, [props.children]);\n  return (\n    <SimpleGrid\n      columns={columns}\n      columnGap={{\n        base: \"4\",\n        md: \"6\",\n      }}\n      rowGap={{\n        base: \"8\",\n        md: \"10\",\n      }}\n      {...props}\n    />\n  );\n};\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Box, HStack } from \"@chakra-ui/layout\";\nimport {\n  Icon,\n  Stack,\n  Select,\n  Image,\n  Link,\n  Text,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport { BsSearch, BsCaretDownFill } from \"react-icons/bs\";\nimport { FaExternalLinkSquareAlt } from \"react-icons/fa\";\nimport {} from \"@chakra-ui/input\";\nimport { GameCard } from \"./components/gameCard\";\nimport { GameGrid } from \"./components/gameGrid\";\nimport Typical from \"react-typical\";\n\nconst baseURL =\n  \"https://partners.9ijakids.com/index.php?partnerId=555776&accessToken=l0lawtvv-94bv-oi4d-u808-5ubz&action=catalogfilter\";\n\nfunction App() {\n  const [gamesList, setGamesList] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [searchText, setSearchText] = useState(\"\");\n\n  const [groupFilterParams, setGroupFilterParams] = useState([\"All\"]);\n  const [levelFilterParams, setLevelFilterParams] = useState([\"All\"]);\n  const [searchParams] = useState([\"Topic\"]);\n\n  useEffect(() => {\n    axios.get(baseURL).then((response) => {\n      setIsLoaded(true);\n      setGamesList(response.data);\n    });\n  }, []);\n\n  function search(gamesList) {\n    return gamesList.filter((game) => {\n      if (game.Group == groupFilterParams) {\n        return searchParams.some((newGame) => {\n          return (\n            game[newGame]\n              .toString()\n              .toLowerCase()\n              .indexOf(searchText.toLowerCase()) > -1\n          );\n        });\n      }\n      if (game.Level == levelFilterParams) {\n        return searchParams.some((newGame) => {\n          return (\n            game[newGame]\n              .toString()\n              .toLowerCase()\n              .indexOf(searchText.toLowerCase()) > -1\n          );\n        });\n      }\n      if (game.Level == levelFilterParams && game.Group == groupFilterParams) {\n        return searchParams.some((newGame) => {\n          return (\n            game[newGame]\n              .toString()\n              .toLowerCase()\n              .indexOf(searchText.toLowerCase()) > -1\n          );\n        });\n      } else if (groupFilterParams == \"All\" && levelFilterParams == \"All\") {\n        return searchParams.some((newGame) => {\n          return (\n            game[newGame]\n              .toString()\n              .toLowerCase()\n              .indexOf(searchText.toLowerCase()) > -1\n          );\n        });\n      }\n    });\n  }\n\n  if (!isLoaded) {\n    return (\n      <Stack>\n        <Spinner\n          position=\"fixed\"\n          left=\"0px\"\n          right=\"0px\"\n          zIndex=\"9999\"\n          thickness=\"4px\"\n          speed=\"0.65s\"\n          emptyColor=\"gray.200\"\n          color=\"blue.500\"\n          size=\"xl\"\n        />\n      </Stack>\n    );\n  } else {\n    return (\n      <>\n        <Box\n          maxW=\"7xl\"\n          mx=\"auto\"\n          w=\"100%\"\n          px={{ base: \"4\", md: \"8\", lg: \"12\" }}\n          py={{ base: \"6\", md: \"8\", lg: \"12\" }}\n        >\n          <Stack>\n            <Stack spacing=\"4\">\n              <Image boxSize=\"150px\" src=\"naijakidslogo.png\" />\n              <Stack direction=\"row\" spacing=\"4\" justify=\"space-between\">\n                {\" \"}\n                <Text as=\"i\" fontSize=\"xl\">\n                  <Typical\n                    steps={[\n                      \"Hi there, my name is Olamide 🙃🙃\",\n                      1500,\n                      \"This is my one page catalogue   for the react front-end internship task 🕶️🕺\",\n                      1500,\n                      \"This project was built using React and ChakraUI 😎🎩\",\n                      1500,\n                    ]}\n                    loop={Infinity}\n                    wrapper=\"p\"\n                  />\n                </Text>\n                <Stack>\n                  <Link\n                    fontWeight=\"bold\"\n                    color=\"green.900\"\n                    href=\"https://github.com/Sholamide/naijakids\"\n                    isExternal\n                  >\n                    Github Repo\n                    <Icon as={FaExternalLinkSquareAlt} />\n                  </Link>\n                </Stack>\n              </Stack>\n            </Stack>\n          </Stack>\n\n          <HStack px=\"12px\" py=\"18px\" direction=\"row\">\n            <InputGroup>\n              <InputLeftElement\n                pointerEvents=\"none\"\n                children={<Icon as={BsSearch} px=\"4px\" />}\n              />\n              <Input\n                variant=\"flushed\"\n                placeholder=\"Search games by Topic\"\n                onChange={(e) => setSearchText(e.target.value)}\n                value={searchText}\n              />\n            </InputGroup>\n\n            <Select\n              icon={<Icon as={BsCaretDownFill} />}\n              variant=\"filled\"\n              aria-label=\"Filter games by Groups\"\n              onChange={(e) => {\n                setGroupFilterParams(e.target.value);\n              }}\n            >\n              <option value=\"All\">Filter Games by Groups</option>\n              <option value=\"Academic\">Academic</option>\n              <option value=\"Financial Literacy\">Financial Literacy </option>\n            </Select>\n            <Select\n              icon={<Icon as={BsCaretDownFill} />}\n              variant=\"filled\"\n              aria-label=\"Filter games by Levels\"\n              onChange={(e) => {\n                setLevelFilterParams(e.target.value);\n              }}\n            >\n              <option value=\"All\">Filter Games by Levels</option>\n              <option value=\"Key Stage 1\">Key Stage 1</option>\n              <option value=\"Financial Literacy\">Financial Literacy</option>\n              <option value=\"Key Stage 2\">Key Stage 2</option>\n            </Select>\n          </HStack>\n          <GameGrid>\n            {search(gamesList).map((game) => (\n              <GameCard key={game.GameTitle} game={game} />\n            ))}\n          </GameGrid>\n        </Box>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}